/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.ibu.flight.internalws.models.thirdcontract.rebooking;

import com.ctriposs.baiji.exception.BaijiRuntimeException;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.schema.Field;
import com.ctriposs.baiji.schema.RecordSchema;
import com.ctriposs.baiji.schema.Schema;
import com.ctriposs.baiji.specific.SpecificRecord;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 
 *         改签发票信息
 *       
 */
@DtoDoc("改签发票信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RebookingInvoiceInfo", namespace = "http://soa.ctrip.com/flight/Order/FlightOrderRebooking/v1", propOrder = {
    "title",
    "detail",
    "postCode",
    "receiverName",
    "countryCode",
    "receiverTel",
    "address",
    "isBefore",
    "province",
    "city",
    "district",
    "expressPhone",
    "provinceId",
    "cityId",
    "districtId",
    "payType",
    "payCost",
    "email",
    "mailingType",
    "isEmail",
    "reimbursementType",
    "mainOrderID",
    "invoiceTitleType",
    "taxpayerNumber",
    "companyAccount",
    "companyAddress",
    "companyTel",
    "companyBankName"
})
@SuppressWarnings("all")
public class RebookingInvoiceInfo implements SpecificRecord {

    private static final long serialVersionUID = 1L;

	public static final Schema SCHEMA = Schema.parse("{\"type\":\"record\",\"name\":\"RebookingInvoiceInfo\",\"namespace\":\"" + RebookingInvoiceInfo.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"title\",\"type\":[\"string\",\"null\"]},{\"name\":\"detail\",\"type\":[\"string\",\"null\"]},{\"name\":\"postCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"receiverName\",\"type\":[\"string\",\"null\"]},{\"name\":\"countryCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"receiverTel\",\"type\":[\"string\",\"null\"]},{\"name\":\"address\",\"type\":[\"string\",\"null\"]},{\"name\":\"isBefore\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"province\",\"type\":[\"string\",\"null\"]},{\"name\":\"city\",\"type\":[\"string\",\"null\"]},{\"name\":\"district\",\"type\":[\"string\",\"null\"]},{\"name\":\"expressPhone\",\"type\":[\"string\",\"null\"]},{\"name\":\"provinceId\",\"type\":[\"int\",\"null\"]},{\"name\":\"cityId\",\"type\":[\"int\",\"null\"]},{\"name\":\"districtId\",\"type\":[\"int\",\"null\"]},{\"name\":\"payType\",\"type\":[\"int\",\"null\"]},{\"name\":\"payCost\",\"type\":[\"int\",\"null\"]},{\"name\":\"email\",\"type\":[\"string\",\"null\"]},{\"name\":\"mailingType\",\"type\":[\"string\",\"null\"]},{\"name\":\"isEmail\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"reimbursementType\",\"type\":\"int\"},{\"name\":\"mainOrderID\",\"type\":\"long\"},{\"name\":\"invoiceTitleType\",\"type\":[\"string\",\"null\"]},{\"name\":\"taxpayerNumber\",\"type\":[\"string\",\"null\"]},{\"name\":\"companyAccount\",\"type\":[\"string\",\"null\"]},{\"name\":\"companyAddress\",\"type\":[\"string\",\"null\"]},{\"name\":\"companyTel\",\"type\":[\"string\",\"null\"]},{\"name\":\"companyBankName\",\"type\":[\"string\",\"null\"]}]}");

    @Override
    public Schema getSchema() { return SCHEMA; }

    public RebookingInvoiceInfo(
        String title, 
        String detail, 
        String postCode, 
        String receiverName, 
        String countryCode, 
        String receiverTel, 
        String address, 
        Boolean isBefore, 
        String province, 
        String city, 
        String district, 
        String expressPhone, 
        Integer provinceId, 
        Integer cityId, 
        Integer districtId, 
        Integer payType, 
        Integer payCost, 
        String email, 
        String mailingType, 
        Boolean isEmail, 
        int reimbursementType, 
        long mainOrderID, 
        String invoiceTitleType, 
        String taxpayerNumber, 
        String companyAccount, 
        String companyAddress, 
        String companyTel, 
        String companyBankName) {
        this.title = title;
        this.detail = detail;
        this.postCode = postCode;
        this.receiverName = receiverName;
        this.countryCode = countryCode;
        this.receiverTel = receiverTel;
        this.address = address;
        this.isBefore = isBefore;
        this.province = province;
        this.city = city;
        this.district = district;
        this.expressPhone = expressPhone;
        this.provinceId = provinceId;
        this.cityId = cityId;
        this.districtId = districtId;
        this.payType = payType;
        this.payCost = payCost;
        this.email = email;
        this.mailingType = mailingType;
        this.isEmail = isEmail;
        this.reimbursementType = reimbursementType;
        this.mainOrderID = mainOrderID;
        this.invoiceTitleType = invoiceTitleType;
        this.taxpayerNumber = taxpayerNumber;
        this.companyAccount = companyAccount;
        this.companyAddress = companyAddress;
        this.companyTel = companyTel;
        this.companyBankName = companyBankName;
    }

    public RebookingInvoiceInfo() {
    }

    @FieldDoc("发票抬头")
    @JsonProperty("Title")
    @XmlElement(name = "Title")
    private String title;

    @FieldDoc("费用明细")
    @JsonProperty("Detail")
    @XmlElement(name = "Detail")
    private String detail;

    @FieldDoc("邮编")
    @JsonProperty("PostCode")
    @XmlElement(name = "PostCode")
    private String postCode;

    @FieldDoc("联系人")
    @JsonProperty("ReceiverName")
    @XmlElement(name = "ReceiverName")
    private String receiverName;

    @FieldDoc("收件人电话国家码")
    @JsonProperty("CountryCode")
    @XmlElement(name = "CountryCode")
    private String countryCode;

    @FieldDoc("联系人电话")
    @JsonProperty("ReceiverTel")
    @XmlElement(name = "ReceiverTel")
    private String receiverTel;

    @FieldDoc("地址")
    @JsonProperty("Address")
    @XmlElement(name = "Address")
    private String address;

    @FieldDoc("是否提前邮寄")
    @JsonProperty("IsBefore")
    @XmlElement(name = "IsBefore", nillable = true)
    private Boolean isBefore;

    @FieldDoc("省")
    @JsonProperty("Province")
    @XmlElement(name = "Province")
    private String province;

    @FieldDoc("市")
    @JsonProperty("City")
    @XmlElement(name = "City")
    private String city;

    @FieldDoc("区")
    @JsonProperty("District")
    @XmlElement(name = "District")
    private String district;

    @FieldDoc("收费快递的联系手机")
    @JsonProperty("ExpressPhone")
    @XmlElement(name = "ExpressPhone")
    private String expressPhone;

    @FieldDoc("省ID")
    @JsonProperty("ProvinceId")
    @XmlElement(name = "ProvinceId", nillable = true)
    private Integer provinceId;

    @FieldDoc("城市ID")
    @JsonProperty("CityId")
    @XmlElement(name = "CityId", nillable = true)
    private Integer cityId;

    @FieldDoc("区域ID")
    @JsonProperty("DistrictId")
    @XmlElement(name = "DistrictId", nillable = true)
    private Integer districtId;

    @FieldDoc("送票费支付方式（0：普通，1：积分抵扣， 2送礼品卡，3钻石会员免费，4BossFree，5CarCoupon）")
    @JsonProperty("PayType")
    @XmlElement(name = "PayType", nillable = true)
    private Integer payType;

    @FieldDoc("积分抵扣数目")
    @JsonProperty("PayCost")
    @XmlElement(name = "PayCost", nillable = true)
    private Integer payCost;

    @FieldDoc("Email地址")
    @JsonProperty("Email")
    @XmlElement(name = "Email")
    private String email;

    @FieldDoc("邮寄方式，EP表示快递，OM表示平信，RL表示挂号信")
    @JsonProperty("MailingType")
    @XmlElement(name = "MailingType")
    private String mailingType;

    @FieldDoc("是否发送邮件")
    @JsonProperty("IsEmail")
    @XmlElement(name = "IsEmail", nillable = true)
    private Boolean isEmail;

    @FieldDoc("报销凭证类型 1.行程单 2.发票 3.国际电子Invoice 4.电子发票")
    @JsonProperty("ReimbursementType")
    @XmlElement(name = "ReimbursementType")
    private int reimbursementType;

    @FieldDoc("合并邮寄主订单号")
    @JsonProperty("MainOrderID")
    @XmlElement(name = "MainOrderID")
    private long mainOrderID;

    @FieldDoc("发票抬头类型 P:个人,B:公司")
    @JsonProperty("InvoiceTitleType")
    @XmlElement(name = "InvoiceTitleType")
    private String invoiceTitleType;

    @FieldDoc("纳税人识别号")
    @JsonProperty("TaxpayerNumber")
    @XmlElement(name = "TaxpayerNumber")
    private String taxpayerNumber;

    @FieldDoc("公司帐号")
    @JsonProperty("CompanyAccount")
    @XmlElement(name = "CompanyAccount")
    private String companyAccount;

    @FieldDoc("公司地址")
    @JsonProperty("CompanyAddress")
    @XmlElement(name = "CompanyAddress")
    private String companyAddress;

    @FieldDoc("公司电话")
    @JsonProperty("CompanyTel")
    @XmlElement(name = "CompanyTel")
    private String companyTel;

    @FieldDoc("公司开户行")
    @JsonProperty("CompanyBankName")
    @XmlElement(name = "CompanyBankName")
    private String companyBankName;

    /**
     * 发票抬头
     */
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * 费用明细
     */
    public String getDetail() {
        return this.detail;
    }

    public void setDetail(String detail) {
        this.detail = detail;
    }

    /**
     * 邮编
     */
    public String getPostCode() {
        return this.postCode;
    }

    public void setPostCode(String postCode) {
        this.postCode = postCode;
    }

    /**
     * 联系人
     */
    public String getReceiverName() {
        return this.receiverName;
    }

    public void setReceiverName(String receiverName) {
        this.receiverName = receiverName;
    }

    /**
     * 收件人电话国家码
     */
    public String getCountryCode() {
        return this.countryCode;
    }

    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    /**
     * 联系人电话
     */
    public String getReceiverTel() {
        return this.receiverTel;
    }

    public void setReceiverTel(String receiverTel) {
        this.receiverTel = receiverTel;
    }

    /**
     * 地址
     */
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * 是否提前邮寄
     */
    public Boolean getIsBefore() {
        return this.isBefore;
    }

    public void setIsBefore(Boolean isBefore) {
        this.isBefore = isBefore;
    }

    /**
     * 省
     */
    public String getProvince() {
        return this.province;
    }

    public void setProvince(String province) {
        this.province = province;
    }

    /**
     * 市
     */
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    /**
     * 区
     */
    public String getDistrict() {
        return this.district;
    }

    public void setDistrict(String district) {
        this.district = district;
    }

    /**
     * 收费快递的联系手机
     */
    public String getExpressPhone() {
        return this.expressPhone;
    }

    public void setExpressPhone(String expressPhone) {
        this.expressPhone = expressPhone;
    }

    /**
     * 省ID
     */
    public Integer getProvinceId() {
        return this.provinceId;
    }

    public void setProvinceId(Integer provinceId) {
        this.provinceId = provinceId;
    }

    /**
     * 城市ID
     */
    public Integer getCityId() {
        return this.cityId;
    }

    public void setCityId(Integer cityId) {
        this.cityId = cityId;
    }

    /**
     * 区域ID
     */
    public Integer getDistrictId() {
        return this.districtId;
    }

    public void setDistrictId(Integer districtId) {
        this.districtId = districtId;
    }

    /**
     * 送票费支付方式（0：普通，1：积分抵扣， 2送礼品卡，3钻石会员免费，4BossFree，5CarCoupon）
     */
    public Integer getPayType() {
        return this.payType;
    }

    public void setPayType(Integer payType) {
        this.payType = payType;
    }

    /**
     * 积分抵扣数目
     */
    public Integer getPayCost() {
        return this.payCost;
    }

    public void setPayCost(Integer payCost) {
        this.payCost = payCost;
    }

    /**
     * Email地址
     */
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * 邮寄方式，EP表示快递，OM表示平信，RL表示挂号信
     */
    public String getMailingType() {
        return this.mailingType;
    }

    public void setMailingType(String mailingType) {
        this.mailingType = mailingType;
    }

    /**
     * 是否发送邮件
     */
    public Boolean getIsEmail() {
        return this.isEmail;
    }

    public void setIsEmail(Boolean isEmail) {
        this.isEmail = isEmail;
    }

    /**
     * 报销凭证类型 1.行程单 2.发票 3.国际电子Invoice 4.电子发票
     */
    public int getReimbursementType() {
        return this.reimbursementType;
    }

    public void setReimbursementType(int reimbursementType) {
        this.reimbursementType = reimbursementType;
    }

    /**
     * 合并邮寄主订单号
     */
    public long getMainOrderID() {
        return this.mainOrderID;
    }

    public void setMainOrderID(long mainOrderID) {
        this.mainOrderID = mainOrderID;
    }

    /**
     * 发票抬头类型 P:个人,B:公司
     */
    public String getInvoiceTitleType() {
        return this.invoiceTitleType;
    }

    public void setInvoiceTitleType(String invoiceTitleType) {
        this.invoiceTitleType = invoiceTitleType;
    }

    /**
     * 纳税人识别号
     */
    public String getTaxpayerNumber() {
        return this.taxpayerNumber;
    }

    public void setTaxpayerNumber(String taxpayerNumber) {
        this.taxpayerNumber = taxpayerNumber;
    }

    /**
     * 公司帐号
     */
    public String getCompanyAccount() {
        return this.companyAccount;
    }

    public void setCompanyAccount(String companyAccount) {
        this.companyAccount = companyAccount;
    }

    /**
     * 公司地址
     */
    public String getCompanyAddress() {
        return this.companyAddress;
    }

    public void setCompanyAddress(String companyAddress) {
        this.companyAddress = companyAddress;
    }

    /**
     * 公司电话
     */
    public String getCompanyTel() {
        return this.companyTel;
    }

    public void setCompanyTel(String companyTel) {
        this.companyTel = companyTel;
    }

    /**
     * 公司开户行
     */
    public String getCompanyBankName() {
        return this.companyBankName;
    }

    public void setCompanyBankName(String companyBankName) {
        this.companyBankName = companyBankName;
    }

    // Used by DatumWriter. Applications should not call.
    @Override
    public Object get(int fieldPos) {
        switch(fieldPos) {
            case 0: return (String) this.title;
            case 1: return (String) this.detail;
            case 2: return (String) this.postCode;
            case 3: return (String) this.receiverName;
            case 4: return (String) this.countryCode;
            case 5: return (String) this.receiverTel;
            case 6: return (String) this.address;
            case 7: return (Boolean) this.isBefore;
            case 8: return (String) this.province;
            case 9: return (String) this.city;
            case 10: return (String) this.district;
            case 11: return (String) this.expressPhone;
            case 12: return (Integer) this.provinceId;
            case 13: return (Integer) this.cityId;
            case 14: return (Integer) this.districtId;
            case 15: return (Integer) this.payType;
            case 16: return (Integer) this.payCost;
            case 17: return (String) this.email;
            case 18: return (String) this.mailingType;
            case 19: return (Boolean) this.isEmail;
            case 20: return (int) this.reimbursementType;
            case 21: return (long) this.mainOrderID;
            case 22: return (String) this.invoiceTitleType;
            case 23: return (String) this.taxpayerNumber;
            case 24: return (String) this.companyAccount;
            case 25: return (String) this.companyAddress;
            case 26: return (String) this.companyTel;
            case 27: return (String) this.companyBankName;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in get()");
        }
    }

    // Used by DatumReader. Applications should not call.
    @Override
    public void put(int fieldPos, Object fieldValue) {
        switch(fieldPos) {
            case 0: this.title = (String)fieldValue; break;
            case 1: this.detail = (String)fieldValue; break;
            case 2: this.postCode = (String)fieldValue; break;
            case 3: this.receiverName = (String)fieldValue; break;
            case 4: this.countryCode = (String)fieldValue; break;
            case 5: this.receiverTel = (String)fieldValue; break;
            case 6: this.address = (String)fieldValue; break;
            case 7: this.isBefore = (Boolean)fieldValue; break;
            case 8: this.province = (String)fieldValue; break;
            case 9: this.city = (String)fieldValue; break;
            case 10: this.district = (String)fieldValue; break;
            case 11: this.expressPhone = (String)fieldValue; break;
            case 12: this.provinceId = (Integer)fieldValue; break;
            case 13: this.cityId = (Integer)fieldValue; break;
            case 14: this.districtId = (Integer)fieldValue; break;
            case 15: this.payType = (Integer)fieldValue; break;
            case 16: this.payCost = (Integer)fieldValue; break;
            case 17: this.email = (String)fieldValue; break;
            case 18: this.mailingType = (String)fieldValue; break;
            case 19: this.isEmail = (Boolean)fieldValue; break;
            case 20: this.reimbursementType = (int)fieldValue; break;
            case 21: this.mainOrderID = (long)fieldValue; break;
            case 22: this.invoiceTitleType = (String)fieldValue; break;
            case 23: this.taxpayerNumber = (String)fieldValue; break;
            case 24: this.companyAccount = (String)fieldValue; break;
            case 25: this.companyAddress = (String)fieldValue; break;
            case 26: this.companyTel = (String)fieldValue; break;
            case 27: this.companyBankName = (String)fieldValue; break;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in put()");
        }
    }

    @Override
    public Object get(String fieldName) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return null;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        return field != null ? get(field.getPos()) : null;
    }

    @Override
    public void put(String fieldName, Object fieldValue) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        if (field != null) {
            put(field.getPos(), fieldValue);
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final RebookingInvoiceInfo other = (RebookingInvoiceInfo)obj;
        return
            Objects.equal(this.title, other.title) && 
            Objects.equal(this.detail, other.detail) && 
            Objects.equal(this.postCode, other.postCode) && 
            Objects.equal(this.receiverName, other.receiverName) && 
            Objects.equal(this.countryCode, other.countryCode) && 
            Objects.equal(this.receiverTel, other.receiverTel) && 
            Objects.equal(this.address, other.address) && 
            Objects.equal(this.isBefore, other.isBefore) && 
            Objects.equal(this.province, other.province) && 
            Objects.equal(this.city, other.city) && 
            Objects.equal(this.district, other.district) && 
            Objects.equal(this.expressPhone, other.expressPhone) && 
            Objects.equal(this.provinceId, other.provinceId) && 
            Objects.equal(this.cityId, other.cityId) && 
            Objects.equal(this.districtId, other.districtId) && 
            Objects.equal(this.payType, other.payType) && 
            Objects.equal(this.payCost, other.payCost) && 
            Objects.equal(this.email, other.email) && 
            Objects.equal(this.mailingType, other.mailingType) && 
            Objects.equal(this.isEmail, other.isEmail) && 
            Objects.equal(this.reimbursementType, other.reimbursementType) && 
            Objects.equal(this.mainOrderID, other.mainOrderID) && 
            Objects.equal(this.invoiceTitleType, other.invoiceTitleType) && 
            Objects.equal(this.taxpayerNumber, other.taxpayerNumber) && 
            Objects.equal(this.companyAccount, other.companyAccount) && 
            Objects.equal(this.companyAddress, other.companyAddress) && 
            Objects.equal(this.companyTel, other.companyTel) && 
            Objects.equal(this.companyBankName, other.companyBankName);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.title);
        result = 31 * result + Objects.hashCode(this.detail);
        result = 31 * result + Objects.hashCode(this.postCode);
        result = 31 * result + Objects.hashCode(this.receiverName);
        result = 31 * result + Objects.hashCode(this.countryCode);
        result = 31 * result + Objects.hashCode(this.receiverTel);
        result = 31 * result + Objects.hashCode(this.address);
        result = 31 * result + Objects.hashCode(this.isBefore);
        result = 31 * result + Objects.hashCode(this.province);
        result = 31 * result + Objects.hashCode(this.city);
        result = 31 * result + Objects.hashCode(this.district);
        result = 31 * result + Objects.hashCode(this.expressPhone);
        result = 31 * result + Objects.hashCode(this.provinceId);
        result = 31 * result + Objects.hashCode(this.cityId);
        result = 31 * result + Objects.hashCode(this.districtId);
        result = 31 * result + Objects.hashCode(this.payType);
        result = 31 * result + Objects.hashCode(this.payCost);
        result = 31 * result + Objects.hashCode(this.email);
        result = 31 * result + Objects.hashCode(this.mailingType);
        result = 31 * result + Objects.hashCode(this.isEmail);
        result = 31 * result + Objects.hashCode(this.reimbursementType);
        result = 31 * result + Objects.hashCode(this.mainOrderID);
        result = 31 * result + Objects.hashCode(this.invoiceTitleType);
        result = 31 * result + Objects.hashCode(this.taxpayerNumber);
        result = 31 * result + Objects.hashCode(this.companyAccount);
        result = 31 * result + Objects.hashCode(this.companyAddress);
        result = 31 * result + Objects.hashCode(this.companyTel);
        result = 31 * result + Objects.hashCode(this.companyBankName);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("title", title)
            .add("detail", detail)
            .add("postCode", postCode)
            .add("receiverName", receiverName)
            .add("countryCode", countryCode)
            .add("receiverTel", receiverTel)
            .add("address", address)
            .add("isBefore", isBefore)
            .add("province", province)
            .add("city", city)
            .add("district", district)
            .add("expressPhone", expressPhone)
            .add("provinceId", provinceId)
            .add("cityId", cityId)
            .add("districtId", districtId)
            .add("payType", payType)
            .add("payCost", payCost)
            .add("email", email)
            .add("mailingType", mailingType)
            .add("isEmail", isEmail)
            .add("reimbursementType", reimbursementType)
            .add("mainOrderID", mainOrderID)
            .add("invoiceTitleType", invoiceTitleType)
            .add("taxpayerNumber", taxpayerNumber)
            .add("companyAccount", companyAccount)
            .add("companyAddress", companyAddress)
            .add("companyTel", companyTel)
            .add("companyBankName", companyBankName)
            .toString();
    }
}